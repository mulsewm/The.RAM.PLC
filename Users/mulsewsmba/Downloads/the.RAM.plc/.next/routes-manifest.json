{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/api/:path*",
      "headers": [
        {
          "key": "Access-Control-Allow-Credentials",
          "value": "true"
        },
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET,OPTIONS,PATCH,DELETE,POST,PUT"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/admin/partnerships/[id]",
      "regex": "^/admin/partnerships/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/admin/partnerships/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/partnerships/[id]",
      "regex": "^/api/partnerships/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/partnerships/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/partnerships/[id]/attachments",
      "regex": "^/api/partnerships/([^/]+?)/attachments(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/partnerships/(?<nxtPid>[^/]+?)/attachments(?:/)?$"
    },
    {
      "page": "/api/partnerships/[id]/notes",
      "regex": "^/api/partnerships/([^/]+?)/notes(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/partnerships/(?<nxtPid>[^/]+?)/notes(?:/)?$"
    },
    {
      "page": "/api/partnerships/[id]/status",
      "regex": "^/api/partnerships/([^/]+?)/status(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/partnerships/(?<nxtPid>[^/]+?)/status(?:/)?$"
    },
    {
      "page": "/api/settings/[key]",
      "regex": "^/api/settings/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPkey": "nxtPkey"
      },
      "namedRegex": "^/api/settings/(?<nxtPkey>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/users/[id]",
      "regex": "^/api/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/users/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/users/[id]/reset-password",
      "regex": "^/api/users/([^/]+?)/reset\\-password(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/users/(?<nxtPid>[^/]+?)/reset\\-password(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/audit-logs",
      "regex": "^/admin/audit\\-logs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/audit\\-logs(?:/)?$"
    },
    {
      "page": "/admin/partnerships",
      "regex": "^/admin/partnerships(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/partnerships(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/test-login",
      "regex": "^/test\\-login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-login(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}